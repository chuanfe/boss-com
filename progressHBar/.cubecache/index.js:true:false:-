{"queryPath":"/index.js","absPath":"/Applications/code/datav/progressHBar/index.js","realPath":"/index.js","type":"script","source":"var Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\n//var Chart = require('XXX');\n\n/**\n * 马良基础类\n */\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  }\n  this.container = $(container);           //初始化容器\n  this.apis = config.apis;                 //hook一定要有\n  this._data = null;                       //数据\n  this.chart = null;                       //图表\n  this.init(config);\n}, {\n  /**\n   * 公有初始化\n   */\n  init: function (config) {\n    //1.初始化,合并配置\n    this.mergeConfig(config);\n    //2.刷新布局,针对有子组件的组件 可有可无\n    this.updateLayout();\n    //3.子组件实例化\n    //this.chart = new Chart(this.container[0], this.config);\n    //4.如果有需要, 更新样式\n  },\n  /**\n   * 绘制\n   * @param data\n   * @param options 不一定有\n   * !!注意: 第二个参数支持config, 就不需要updateOptions这个方法了\n   */\n  render: function (data, config) {\n    let {value, total} = this.data(data);\n    var cfg = this.mergeConfig(config);\n    const {\n      fineness,\n      borderRadius,\n      thumbBg,\n      trackBg,\n      tip: {\n        tipColor,\n        tipFontSize,\n        tipFontWeight\n      }\n    } = cfg;\n    const thumbBgCss = thumbBg.style === 'single' ? thumbBg.value : `linear-gradient(to right, ${thumbBg.from}, ${thumbBg.to})`\n    //更新图表\n    //this.chart.render(data, cfg);\n    const tpl = `\n    <div class=\"progress-bar-warpper\" style=\"\n      width: 100%;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      overflow: hidden;\n    \">\n      <div class=\"progress\" style=\"\n          position: relative;\n          width: 90%;\n          height: ${fineness}px;\n          background: ${trackBg};\n          border-radius: ${borderRadius}px;\n        \">\n          <div class=\"progress-bar\" style=\"\n            float: left;\n            position: relative;\n            width: 0%;\n            height: 100%;\n            background: ${thumbBgCss};\n            border-radius: ${borderRadius}px;\n          \">\n          <div class=\"progress-bar-tip\" style=\"\n            position: absolute;\n            top: -${tipFontSize + 8}px;\n            font-size: ${tipFontSize}px;\n            right: 0;\n            color: ${tipColor};\n            transform: translateX(50%);\n            font-weight: ${tipFontWeight};\n            font-family: \"Microsoft Yahei\";\n          \">0</div>\n          <div class=\"progress-bar-triangle\" style=\"\n            position: absolute;\n            width: 0;\n            height: 0;\n            border: ${0.3 * fineness}px solid;\n            border-color: transparent transparent ${tipColor};\n            top: ${fineness}px;\n            right: 0;\n          \"></div>\n        </div>\n      </div>\n    </div>\n    `\n    this.container.html(tpl);\n    \n    this.dynamicEffect();\n    //如果有需要的话,更新样式\n    // this.updateStyle({width});\n  },\n  /** \n   * 动效函数\n  */\n  dynamicEffect: function() {\n    let {value, total} = this._data;\n    const {\n      tip: {\n        tipFix,\n        showRealValue\n      }\n    } = this.config;\n    const barEl = this.container.find('.progress-bar');\n    const textEl = this.container.find('.progress-bar-tip');\n\n    $({property:0}).animate({property:100},\n      {\n        duration:600,\n        step:function(){\n          const width = `${this.property/100*(value / total * 100)}%`;\n          const text=`${(this.property/100*(showRealValue ? value : value / total * 100)).toFixed(tipFix)}${showRealValue ? '' : '%'}`;\n          barEl.css('width', width);\n          textEl.text(text);\n        }\n      }\n    )},\n  /**\n   *\n   * @param width\n   * @param height\n   */\n  resize: function (width, height) {\n    this.updateLayout(width, height);\n    //更新图表\n    //this.chart.render({\n    //  width: width,\n    //  height: height\n    //})\n  },\n  /**\n   * 每个组件根据自身需要,从主题中获取颜色 覆盖到自身配置的颜色中.\n   * 暂时可以不填内容\n   */\n  setColors: function () {\n    //比如\n    //var cfg = this.config;\n    //cfg.color = cfg.theme.series[0] || cfg.color;\n  },\n  /**\n   * 数据,设置和获取数据\n   * @param data\n   * @returns {*|number}\n   */\n  data: function (data) {\n    if (data) {\n      this._data = data;\n    }\n    return this._data;\n  },\n  /**\n   * 更新配置\n   * 优先级: config.colors > config.theme > this.config.theme > this.config.colors\n   * [注] 有数组的配置一定要替换\n   * @param config\n   * @private\n   */\n  mergeConfig: function (config) {\n    if (!config) {return this.config}\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n  /**\n   * 更新布局\n   * 可有可无\n   */\n  updateLayout: function () {},\n  /**\n   * 更新样式\n   * 有些子组件控制不到的,但是需要控制改变的,在这里实现\n   */\n  updateStyle: function () {},\n  /**\n   * 更新配置\n   * !!注意:如果render支持第二个参数options, 那updateOptions不是必须的\n   */\n  //updateOptions: function (options) {},\n  /**\n   * 更新某些配置\n   * 给可以增量更新配置的组件用\n   */\n  //updateXXX: function () {},\n  /**\n   * 销毁组件\n   */\n   destroy: function(){\n     this.container.empty();\n   }\n});","code":"'use strict';\n\nvar Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\n\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  };\n  this.container = $(container);\n  this.apis = config.apis;\n  this._data = null;\n  this.chart = null;\n  this.init(config);\n}, {\n  init: function init(config) {\n    this.mergeConfig(config);\n\n    this.updateLayout();\n  },\n\n  render: function render(data, config) {\n    var _data = this.data(data),\n        value = _data.value,\n        total = _data.total;\n\n    var cfg = this.mergeConfig(config);\n    var fineness = cfg.fineness,\n        borderRadius = cfg.borderRadius,\n        thumbBg = cfg.thumbBg,\n        trackBg = cfg.trackBg,\n        _cfg$tip = cfg.tip,\n        tipColor = _cfg$tip.tipColor,\n        tipFontSize = _cfg$tip.tipFontSize,\n        tipFontWeight = _cfg$tip.tipFontWeight;\n\n    var thumbBgCss = thumbBg.style === 'single' ? thumbBg.value : 'linear-gradient(to right, ' + thumbBg.from + ', ' + thumbBg.to + ')';\n\n    var tpl = '\\n    <div class=\"progress-bar-warpper\" style=\"\\n      width: 100%;\\n      height: 100%;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      overflow: hidden;\\n    \">\\n      <div class=\"progress\" style=\"\\n          position: relative;\\n          width: 90%;\\n          height: ' + fineness + 'px;\\n          background: ' + trackBg + ';\\n          border-radius: ' + borderRadius + 'px;\\n        \">\\n          <div class=\"progress-bar\" style=\"\\n            float: left;\\n            position: relative;\\n            width: 0%;\\n            height: 100%;\\n            background: ' + thumbBgCss + ';\\n            border-radius: ' + borderRadius + 'px;\\n          \">\\n          <div class=\"progress-bar-tip\" style=\"\\n            position: absolute;\\n            top: -' + (tipFontSize + 8) + 'px;\\n            font-size: ' + tipFontSize + 'px;\\n            right: 0;\\n            color: ' + tipColor + ';\\n            transform: translateX(50%);\\n            font-weight: ' + tipFontWeight + ';\\n            font-family: \"Microsoft Yahei\";\\n          \">0</div>\\n          <div class=\"progress-bar-triangle\" style=\"\\n            position: absolute;\\n            width: 0;\\n            height: 0;\\n            border: ' + 0.3 * fineness + 'px solid;\\n            border-color: transparent transparent ' + tipColor + ';\\n            top: ' + fineness + 'px;\\n            right: 0;\\n          \"></div>\\n        </div>\\n      </div>\\n    </div>\\n    ';\n    this.container.html(tpl);\n\n    this.dynamicEffect();\n  },\n\n  dynamicEffect: function dynamicEffect() {\n    var _data2 = this._data,\n        value = _data2.value,\n        total = _data2.total;\n    var _config$tip = this.config.tip,\n        tipFix = _config$tip.tipFix,\n        showRealValue = _config$tip.showRealValue;\n\n    var barEl = this.container.find('.progress-bar');\n    var textEl = this.container.find('.progress-bar-tip');\n\n    $({ property: 0 }).animate({ property: 100 }, {\n      duration: 600,\n      step: function step() {\n        var width = this.property / 100 * (value / total * 100) + '%';\n        var text = '' + (this.property / 100 * (showRealValue ? value : value / total * 100)).toFixed(tipFix) + (showRealValue ? '' : '%');\n        barEl.css('width', width);\n        textEl.text(text);\n      }\n    });\n  },\n\n  resize: function resize(width, height) {\n    this.updateLayout(width, height);\n  },\n\n  setColors: function setColors() {},\n\n  data: function data(_data3) {\n    if (_data3) {\n      this._data = _data3;\n    }\n    return this._data;\n  },\n\n  mergeConfig: function mergeConfig(config) {\n    if (!config) {\n      return this.config;\n    }\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n\n  updateLayout: function updateLayout() {},\n\n  updateStyle: function updateStyle() {},\n\n  destroy: function destroy() {\n    this.container.empty();\n  }\n});","codeWraped":"Cube(\"/index.js\", [\"/node_modules/bcore/event.js\", \"/node_modules/jquery/dist/jquery.js\", \"/node_modules/lodash/lodash.js\"], function (module, exports, require, load, process, global) {\n\n  var Event = require('/node_modules/bcore/event.js');\n  var $ = require('/node_modules/jquery/dist/jquery.js');\n  var _ = require('/node_modules/lodash/lodash.js');\n\n  module.exports = Event.extend(function Base(container, config) {\n    this.config = {\n      theme: {} };\n\n    this.container = $(container);\n    this.apis = config.apis;\n    this._data = null;\n    this.chart = null;\n    this.init(config);\n  }, {\n    init: function init(config) {\n      this.mergeConfig(config);\n\n      this.updateLayout();\n    },\n\n    render: function render(data, config) {\n      var _data = this.data(data),\n      value = _data.value,\n      total = _data.total;\n\n      var cfg = this.mergeConfig(config);\n      var fineness = cfg.fineness,\n      borderRadius = cfg.borderRadius,\n      thumbBg = cfg.thumbBg,\n      trackBg = cfg.trackBg,\n      _cfg$tip = cfg.tip,\n      tipColor = _cfg$tip.tipColor,\n      tipFontSize = _cfg$tip.tipFontSize,\n      tipFontWeight = _cfg$tip.tipFontWeight;\n\n      var thumbBgCss = thumbBg.style === 'single' ? thumbBg.value : 'linear-gradient(to right, ' + thumbBg.from + ', ' + thumbBg.to + ')';\n\n      var tpl = '\\n    <div class=\"progress-bar-warpper\" style=\"\\n      width: 100%;\\n      height: 100%;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      overflow: hidden;\\n    \">\\n      <div class=\"progress\" style=\"\\n          position: relative;\\n          width: 90%;\\n          height: ' + fineness + 'px;\\n          background: ' + trackBg + ';\\n          border-radius: ' + borderRadius + 'px;\\n        \">\\n          <div class=\"progress-bar\" style=\"\\n            float: left;\\n            position: relative;\\n            width: 0%;\\n            height: 100%;\\n            background: ' + thumbBgCss + ';\\n            border-radius: ' + borderRadius + 'px;\\n          \">\\n          <div class=\"progress-bar-tip\" style=\"\\n            position: absolute;\\n            top: -' + (tipFontSize + 8) + 'px;\\n            font-size: ' + tipFontSize + 'px;\\n            right: 0;\\n            color: ' + tipColor + ';\\n            transform: translateX(50%);\\n            font-weight: ' + tipFontWeight + ';\\n            font-family: \"Microsoft Yahei\";\\n          \">0</div>\\n          <div class=\"progress-bar-triangle\" style=\"\\n            position: absolute;\\n            width: 0;\\n            height: 0;\\n            border: ' + 0.3 * fineness + 'px solid;\\n            border-color: transparent transparent ' + tipColor + ';\\n            top: ' + fineness + 'px;\\n            right: 0;\\n          \"></div>\\n        </div>\\n      </div>\\n    </div>\\n    ';\n      this.container.html(tpl);\n\n      this.dynamicEffect();\n    },\n\n    dynamicEffect: function dynamicEffect() {\n      var _data2 = this._data,\n      value = _data2.value,\n      total = _data2.total;\n      var _config$tip = this.config.tip,\n      tipFix = _config$tip.tipFix,\n      showRealValue = _config$tip.showRealValue;\n\n      var barEl = this.container.find('.progress-bar');\n      var textEl = this.container.find('.progress-bar-tip');\n\n      $({ property: 0 }).animate({ property: 100 }, {\n        duration: 600,\n        step: function step() {\n          var width = this.property / 100 * (value / total * 100) + '%';\n          var text = '' + (this.property / 100 * (showRealValue ? value : value / total * 100)).toFixed(tipFix) + (showRealValue ? '' : '%');\n          barEl.css('width', width);\n          textEl.text(text);\n        } });\n\n    },\n\n    resize: function resize(width, height) {\n      this.updateLayout(width, height);\n    },\n\n    setColors: function setColors() {},\n\n    data: function data(_data3) {\n      if (_data3) {\n        this._data = _data3;\n      }\n      return this._data;\n    },\n\n    mergeConfig: function mergeConfig(config) {\n      if (!config) {\n        return this.config;\n      }\n      this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n      this.setColors();\n      this.config = _.defaultsDeep(config || {}, this.config);\n      return this.config;\n    },\n\n    updateLayout: function updateLayout() {},\n\n    updateStyle: function updateStyle() {},\n\n    destroy: function destroy() {\n      this.container.empty();\n    } });return module.exports;});","sourceMap":null,"modifyTime":1559882595741,"mime":"application/javascript","wrap":true,"skip":false,"compress":false,"ext":".js","targetExt":".js","loads":[],"originalLoads":[],"requires":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js"],"requiresOrigin":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js"],"debugInfo":[],"requiresArgsRefer":[{"type":"StringLiteral","start":35,"end":48,"loc":{"start":{"line":3,"column":20},"end":{"line":3,"column":33}},"extra":{"rawValue":"bcore/event","raw":"'bcore/event'"},"value":"/node_modules/bcore/event.js"},{"type":"StringLiteral","start":67,"end":75,"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":24}},"extra":{"rawValue":"jquery","raw":"'jquery'"},"value":"/node_modules/jquery/dist/jquery.js"},{"type":"StringLiteral","start":94,"end":102,"loc":{"start":{"line":5,"column":16},"end":{"line":5,"column":24}},"extra":{"rawValue":"lodash","raw":"'lodash'"},"value":"/node_modules/lodash/lodash.js"}]}